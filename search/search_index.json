{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Vu Tang's Technote Site. This documentation was built by Mkdocs. Please see About me . Document Rules Suitable picture size is: 300x200. Use GIMP for scaling figure (Folow instructions in Photos/ResizingPhotos from help.ubuntu.com). This document is writen in both Vietnamese and English.","title":"Introduction"},{"location":"#document-rules","text":"Suitable picture size is: 300x200. Use GIMP for scaling figure (Folow instructions in Photos/ResizingPhotos from help.ubuntu.com). This document is writen in both Vietnamese and English.","title":"Document Rules"},{"location":"whatnext/","text":"To do Documentation: Markdown, Mkdocs, YAML Consider which online storage service will be used (Google drive or One drive) Update notes in one drive Coding and Algorithm: Reading books Hacker Rank Linux Linux Device Driver: platform device, spi/i2c device, ethernet device Books","title":"What's next"},{"location":"whatnext/#to-do","text":"Documentation: Markdown, Mkdocs, YAML Consider which online storage service will be used (Google drive or One drive) Update notes in one drive Coding and Algorithm: Reading books Hacker Rank Linux Linux Device Driver: platform device, spi/i2c device, ethernet device","title":"To do"},{"location":"whatnext/#books","text":"","title":"Books"},{"location":"about/about/","text":"Personal information Vu Tang Linked in: https://linkedin.com/in/vu-tang Embedded Software Engineer at Viettel Network Technologies Center Contact Email:","title":"About me"},{"location":"about/about/#personal-information","text":"Vu Tang Linked in: https://linkedin.com/in/vu-tang Embedded Software Engineer at Viettel Network Technologies Center","title":"Personal information"},{"location":"about/about/#contact","text":"Email:","title":"Contact"},{"location":"bookmarks/bookmarks/","text":"Blogs Sciences Technologies in the World - Blogs of Prof. John Vu, Carnegie Mellon University. \"Journey to the East\" translator (Nguyen Phong). This page is useful to learning English. Links Shichao's Notes - I found the idea to create this documatation from this page.","title":"Bookmarks"},{"location":"bookmarks/bookmarks/#blogs","text":"Sciences Technologies in the World - Blogs of Prof. John Vu, Carnegie Mellon University. \"Journey to the East\" translator (Nguyen Phong). This page is useful to learning English.","title":"Blogs"},{"location":"bookmarks/bookmarks/#links","text":"Shichao's Notes - I found the idea to create this documatation from this page.","title":"Links"},{"location":"books/ldd3/","text":"This is note for LDD3","title":"Linux Device Driver"},{"location":"books/utlk/","text":"This note for Understanding The Linux Kernel","title":"Understanding Linux Kernel"},{"location":"projects/zc706/","text":"ZC706 This note is for zedboard","title":"ZC706"},{"location":"projects/zc706/#zc706","text":"This note is for zedboard","title":"ZC706"},{"location":"projects/zedboard/zedboard/","text":"Zedboard Boot from SD Card with ext4 filesystem Origin Note Chu\u1ea9n b\u1ecb images Trong t\u00e0i li\u1ec7u UG1144 c\u00f3 h\u01b0\u1edbng d\u1eabn qu\u00e1 tr\u00ecnh c\u1ea5u h\u00ecnh \u0111\u1ec3 c\u00f3 th\u1ec3 kh\u1edfi \u0111\u1ed9ng Zynq7000 t\u1eeb SD Card. Trong h\u01b0\u1edbng d\u1eabn n\u00e0y c\u1ea7n l\u01b0u \u00fd \u0111\u1ebfn 2 \u0111i\u1ec3m sau: Thi\u1ebft l\u1eadp petalinux project \u0111\u1ec3 c\u00e1c image \u0111\u01b0\u1ee3c package d\u01b0\u1edbi d\u1ea1ng c\u00f3 th\u1ec3 boot \u0111\u01b0\u1ee3c t\u1eeb SD Card. petalinux-config T\u1ea1o file rootfs.cpio b\u1eb1ng m\u00e3 l\u1ec7nh sau petalinux-package \\--image -c rootfs \\--format initramfs N\u1ebfu s\u1eed d\u1ee5ng l\u1ec7nh package \u0111\u1ec3 t\u1ea1o rootfs.cpio xu\u1ea5t hi\u1ec7n l\u1ed7i sau: [INFO ] package rootfs.cpio to /tmp/petalinux/images/linux\\ ERROR: Linux kernel gen_init_cpio /tmp/petalinux/build/linux/kernel/usr/gen_init_cpio doesn\\'t exits! Please build Linux kernel first!\\ make[1]: *** [package-rootfs-cpio] Fehler 255\\ make: *** [package-rootfs-initramfs] Fehler 2\\ ERROR: Failed to package component linux/rootfs Trong di\u1ec5n \u0111\u00e0n c\u1ee7a Xilinx ( link ) c\u00f3 th\u1ea3o lu\u1eadn v\u1ec1 ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec3 kh\u1eafc ph\u1ee5c \u0111\u01b0\u1ee3c l\u1ed7i tr\u00ean. Bao g\u1ed3m c\u00e1c b\u01b0\u1edbc x\u1eed l\u00fd nh\u01b0 sau: T\u1eaft ch\u1ebf \u0111\u1ed9 automatic kernel configuration petalinux-config\\ Image Packaging Configuration ---> Root filesystem type = SD card\\ Auto Config Settings ---> [ ] kernel autoconfig B\u1eadt ch\u1ebf \u0111\u1ed9 h\u1ed7 tr\u1ecd INITRAMFS trong c\u1ea5u h\u00ecnh c\u1ee7a kernel $ petalinux-config -c kernel General setup - [*] Initial RAM filesystem and RAM disk (initramfs/initrd) support () Initramfs source file(s) Chu\u1ea9n b\u1ecb SD Card C\u1ea7n chu\u1ea9n b\u1ecb SD Card v\u1edbi 02 ph\u00e2n v\u00f9ng: BOOT: \u0111\u01b0\u1ee3c format \u1edf \u0111\u1ecbnh d\u1ea1ng FAT32 ch\u1ee9a BOOT.BIN (bao g\u1ed3m FBSL, PL Bitstream, U-boot) v\u00e0 image.ub (Linux kernel v\u00e0 Device Tree). rootfs: \u0111\u01b0\u1ee3c format \u1edf \u0111\u1ecbnh d\u1ea1ng ext4 ch\u1ee9a root filesystem. Qu\u00e1 tr\u00ecnh chu\u1ea9n b\u1ecb ph\u00e2n v\u00f9ng tr\u00ean SD Card n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c ti\u1ebfn h\u00e0nh \u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1c GUI Tool nh\u01b0 GParted . Ngo\u00e0i ra c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u1ed5 h\u1ee3p CLI tool: fdisk mkfs.vfat mkfs.ext4. Ph\u01b0\u01a1ng ph\u00e1p s\u1eed d\u1ee5ng b\u1ed9 c\u00f4ng c\u1ee5 n\u00e0y \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 chi ti\u1ebft trong Wikipedia c\u1ee7a Xilinx. K\u1ebft qu\u1ea3 c\u1ee7a qu\u00e1 tr\u00ecnh ph\u00e2n v\u00f9ng v\u00e0 format n\u00e0y nh\u01b0 sau: Figure. SD Card Partitions C\u00e0i \u0111\u1eb7t boot image v\u00e0 rootfs l\u00ean SD Card K\u1ebft qu\u1ea3 sau khi th\u1ef1c hi\u1ec7n xong c\u00e1c b\u01b0\u1edbc chu\u1ea9n b\u1ecb li\u00ean quan \u0111\u1ebfn images v\u00e0 SD Card: C\u00e1c file images: BOOT.BIN, image.ub v\u00e0 rootfs.cpio SD Card v\u1edbi hai ph\u00e2n v\u00f9ng: BOOT v\u00e0 rootfs. C\u00e1c images v\u00e0 filesystem ph\u1ea3i \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t l\u00ean SD Card tr\u01b0\u1edbc khi board c\u00f3 th\u1ec3 kh\u1edfi \u0111\u1ed9ng \u0111\u01b0\u1ee3c t\u1eeb SD Card. Qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t bootloader v\u00e0 Linux kernel l\u00e0 qu\u00e1 tr\u00ecnh copy BOOT.BIN v\u00e0 image.ub l\u00ean ph\u00e2n v\u00f9ng BOOT c\u1ee7a sdcard. BootROM c\u1ee7a zynq \u0111\u1ee7 m\u1ea1nh \u0111\u1ec3 c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm \u0111\u01b0\u1ee3c zynq_fsbl.elf tr\u00ean ph\u00e2n v\u00f9ng \u0111\u1ecbnh d\u1ea1ng FAT32 \u0111\u1ec3 kh\u1edfi \u0111\u1ed9ng. Ri\u00eang rootfs \u0111ang \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i \u1edf file rootfs.cpio. S\u1eed d\u1ee5ng \u1ee9ng d\u1ee5ng pax \u0111\u1ec3 th\u00e1o d\u1ee1 filesystem \u0111ang \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i \u1edf \u0111\u1ecbnh d\u1ea1ng cpio. cp images/linux/rootfs.cpio /media/rootfs/ cd /media/rootfs sudo pax -rvf rootfs.cpio Ph\u00e2n t\u00edch v\u00e0 k\u1ebft lu\u1eadn Trong qu\u00e1 tr\u00ecnh chu\u1ea9n b\u1ecb SD Card xu\u1ea5t hi\u1ec7n c\u00e1c thu\u1eadt ng\u1eef. Trong m\u1ee5c n\u00e0y s\u1ebd \u0111i ph\u00e2n t\u00edch v\u00e0 gi\u1ea3i th\u00edch c\u00e1c thu\u1eadt ng\u1eef \u0111\u00f3. CPIO Trong h\u1ec7 \u0111i\u1ec1u h\u00e0nh Linux xu\u1ea5t hi\u1ec7n kh\u00e1i ni\u1ec7m archive file, l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a qu\u00e1 tr\u00ecnh \u0111\u00f3ng g\u00f3i nhi\u1ec1u file d\u1eef li\u1ec7u th\u00e0nh m\u1ed9t file th\u1ed1ng nh\u1ea5t (kh\u00f4ng c\u00f3 qu\u00e1 tr\u00ecnh n\u00e9n d\u1eef li\u1ec7u). M\u1ee5c \u0111\u00edch c\u1ee7a qu\u00e1 tr\u00ecnh \u0111\u00f3ng g\u00f3i n\u00e0y l\u00e0 d\u1ec5 d\u00e0ng cho qu\u00e1 tr\u00ecnh l\u01b0u tr\u1eef c\u0169ng nh\u01b0 trao \u0111\u1ed5i d\u1eef li\u1ec7u. Archive file c\u0169ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng l\u00e0m \u0111\u1ea7u v\u00e0o cho c\u00e1c tr\u00ecnh n\u00e9n d\u1eef li\u1ec7u. Archive file \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i b\u1eb1ng c\u00e1c file archiver. Trong Unix-like system, c\u00e1c file archiver ph\u1ed5 bi\u1ebfn nh\u01b0: tar, ar, cpio. Rootfs k\u1ebft qu\u1ea3 c\u1ee7a b\u01b0\u1edbc 1 \u0111ang \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i d\u01b0\u1edbi d\u1ea1ng archive file - cpio. Qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t rootfs l\u00ean ph\u00e2n v\u00f9ng rootfs tr\u00ean SD Card b\u1ea3n ch\u1ea5t l\u00e0 qu\u00e1 tr\u00ecnh th\u00e1o d\u1ee1 c\u00e1c archive file tr\u1edf v\u1ec1 c\u00e1c file ph\u00e2n bi\u1ec7t ban \u0111\u1ea7u. Qu\u00e1 tr\u00ecnh extract n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1edfi c\u00e1c Linux tool nh\u01b0: cpio ho\u1eb7c pax. Trong h\u01b0\u1edbng d\u1eabn c\u1ee7a Xilinx s\u1eed d\u1ee5ng pax \u0111\u1ec3 th\u00e1o d\u1ee1 rootfs. File system format: fat32 v\u00e0 ext4. File system l\u00e0 c\u00e1ch m\u00e0 m\u1ed9t h\u1ec7 th\u1ed1ng file \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c tr\u00ean c\u00e1c b\u1ed9 nh\u1edb l\u01b0u tr\u1eef. C\u00e1c b\u1ed9 nh\u1edb l\u01b0u tr\u1eef c\u00f3 th\u1ec3 l\u00e0: disk file system ho\u1eb7c flash file system. Fat32 v\u00e0 ext4 l\u00e0 t\u00ean c\u1ee7a c\u00e1c d\u1ea1ng file system \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c ph\u1ed5 bi\u1ebfn tr\u00ean c\u00e1c d\u00f2ng disk file system nh\u01b0 SD Card trong b\u00e0i vi\u1ebft n\u00e0y l\u00e0 m\u1ed9t v\u00ed d\u1ee5. Ngo\u00e0i ra trong qu\u00e1 tr\u00ecnh l\u00e0m vi\u1ec7c v\u1edbi Rootfs c\u1ee7a zynq c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u1ebfn JFFS2 format l\u00e0 m\u1ed9t \u0111\u1ecbnh d\u1ea1ng file system s\u1eed d\u1ee5ng cho c\u00e1c b\u1ed9 nh\u1edb flash.","title":"Zedboard"},{"location":"projects/zedboard/zedboard/#zedboard","text":"","title":"Zedboard"},{"location":"projects/zedboard/zedboard/#boot-from-sd-card-with-ext4-filesystem","text":"Origin Note Chu\u1ea9n b\u1ecb images Trong t\u00e0i li\u1ec7u UG1144 c\u00f3 h\u01b0\u1edbng d\u1eabn qu\u00e1 tr\u00ecnh c\u1ea5u h\u00ecnh \u0111\u1ec3 c\u00f3 th\u1ec3 kh\u1edfi \u0111\u1ed9ng Zynq7000 t\u1eeb SD Card. Trong h\u01b0\u1edbng d\u1eabn n\u00e0y c\u1ea7n l\u01b0u \u00fd \u0111\u1ebfn 2 \u0111i\u1ec3m sau: Thi\u1ebft l\u1eadp petalinux project \u0111\u1ec3 c\u00e1c image \u0111\u01b0\u1ee3c package d\u01b0\u1edbi d\u1ea1ng c\u00f3 th\u1ec3 boot \u0111\u01b0\u1ee3c t\u1eeb SD Card. petalinux-config T\u1ea1o file rootfs.cpio b\u1eb1ng m\u00e3 l\u1ec7nh sau petalinux-package \\--image -c rootfs \\--format initramfs N\u1ebfu s\u1eed d\u1ee5ng l\u1ec7nh package \u0111\u1ec3 t\u1ea1o rootfs.cpio xu\u1ea5t hi\u1ec7n l\u1ed7i sau: [INFO ] package rootfs.cpio to /tmp/petalinux/images/linux\\ ERROR: Linux kernel gen_init_cpio /tmp/petalinux/build/linux/kernel/usr/gen_init_cpio doesn\\'t exits! Please build Linux kernel first!\\ make[1]: *** [package-rootfs-cpio] Fehler 255\\ make: *** [package-rootfs-initramfs] Fehler 2\\ ERROR: Failed to package component linux/rootfs Trong di\u1ec5n \u0111\u00e0n c\u1ee7a Xilinx ( link ) c\u00f3 th\u1ea3o lu\u1eadn v\u1ec1 ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec3 kh\u1eafc ph\u1ee5c \u0111\u01b0\u1ee3c l\u1ed7i tr\u00ean. Bao g\u1ed3m c\u00e1c b\u01b0\u1edbc x\u1eed l\u00fd nh\u01b0 sau: T\u1eaft ch\u1ebf \u0111\u1ed9 automatic kernel configuration petalinux-config\\ Image Packaging Configuration ---> Root filesystem type = SD card\\ Auto Config Settings ---> [ ] kernel autoconfig B\u1eadt ch\u1ebf \u0111\u1ed9 h\u1ed7 tr\u1ecd INITRAMFS trong c\u1ea5u h\u00ecnh c\u1ee7a kernel $ petalinux-config -c kernel General setup - [*] Initial RAM filesystem and RAM disk (initramfs/initrd) support () Initramfs source file(s)","title":"Boot from SD Card with ext4 filesystem"},{"location":"projects/zedboard/zedboard/#chuan-bi-sd-card","text":"C\u1ea7n chu\u1ea9n b\u1ecb SD Card v\u1edbi 02 ph\u00e2n v\u00f9ng: BOOT: \u0111\u01b0\u1ee3c format \u1edf \u0111\u1ecbnh d\u1ea1ng FAT32 ch\u1ee9a BOOT.BIN (bao g\u1ed3m FBSL, PL Bitstream, U-boot) v\u00e0 image.ub (Linux kernel v\u00e0 Device Tree). rootfs: \u0111\u01b0\u1ee3c format \u1edf \u0111\u1ecbnh d\u1ea1ng ext4 ch\u1ee9a root filesystem. Qu\u00e1 tr\u00ecnh chu\u1ea9n b\u1ecb ph\u00e2n v\u00f9ng tr\u00ean SD Card n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c ti\u1ebfn h\u00e0nh \u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1c GUI Tool nh\u01b0 GParted . Ngo\u00e0i ra c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u1ed5 h\u1ee3p CLI tool: fdisk mkfs.vfat mkfs.ext4. Ph\u01b0\u01a1ng ph\u00e1p s\u1eed d\u1ee5ng b\u1ed9 c\u00f4ng c\u1ee5 n\u00e0y \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 chi ti\u1ebft trong Wikipedia c\u1ee7a Xilinx. K\u1ebft qu\u1ea3 c\u1ee7a qu\u00e1 tr\u00ecnh ph\u00e2n v\u00f9ng v\u00e0 format n\u00e0y nh\u01b0 sau: Figure. SD Card Partitions","title":"Chu\u1ea9n b\u1ecb SD Card"},{"location":"projects/zedboard/zedboard/#cai-at-boot-image-va-rootfs-len-sd-card","text":"K\u1ebft qu\u1ea3 sau khi th\u1ef1c hi\u1ec7n xong c\u00e1c b\u01b0\u1edbc chu\u1ea9n b\u1ecb li\u00ean quan \u0111\u1ebfn images v\u00e0 SD Card: C\u00e1c file images: BOOT.BIN, image.ub v\u00e0 rootfs.cpio SD Card v\u1edbi hai ph\u00e2n v\u00f9ng: BOOT v\u00e0 rootfs. C\u00e1c images v\u00e0 filesystem ph\u1ea3i \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t l\u00ean SD Card tr\u01b0\u1edbc khi board c\u00f3 th\u1ec3 kh\u1edfi \u0111\u1ed9ng \u0111\u01b0\u1ee3c t\u1eeb SD Card. Qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t bootloader v\u00e0 Linux kernel l\u00e0 qu\u00e1 tr\u00ecnh copy BOOT.BIN v\u00e0 image.ub l\u00ean ph\u00e2n v\u00f9ng BOOT c\u1ee7a sdcard. BootROM c\u1ee7a zynq \u0111\u1ee7 m\u1ea1nh \u0111\u1ec3 c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm \u0111\u01b0\u1ee3c zynq_fsbl.elf tr\u00ean ph\u00e2n v\u00f9ng \u0111\u1ecbnh d\u1ea1ng FAT32 \u0111\u1ec3 kh\u1edfi \u0111\u1ed9ng. Ri\u00eang rootfs \u0111ang \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i \u1edf file rootfs.cpio. S\u1eed d\u1ee5ng \u1ee9ng d\u1ee5ng pax \u0111\u1ec3 th\u00e1o d\u1ee1 filesystem \u0111ang \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i \u1edf \u0111\u1ecbnh d\u1ea1ng cpio. cp images/linux/rootfs.cpio /media/rootfs/ cd /media/rootfs sudo pax -rvf rootfs.cpio","title":"C\u00e0i \u0111\u1eb7t boot image v\u00e0 rootfs l\u00ean SD Card"},{"location":"projects/zedboard/zedboard/#phan-tich-va-ket-luan","text":"Trong qu\u00e1 tr\u00ecnh chu\u1ea9n b\u1ecb SD Card xu\u1ea5t hi\u1ec7n c\u00e1c thu\u1eadt ng\u1eef. Trong m\u1ee5c n\u00e0y s\u1ebd \u0111i ph\u00e2n t\u00edch v\u00e0 gi\u1ea3i th\u00edch c\u00e1c thu\u1eadt ng\u1eef \u0111\u00f3.","title":"Ph\u00e2n t\u00edch v\u00e0 k\u1ebft lu\u1eadn"},{"location":"projects/zedboard/zedboard/#cpio","text":"Trong h\u1ec7 \u0111i\u1ec1u h\u00e0nh Linux xu\u1ea5t hi\u1ec7n kh\u00e1i ni\u1ec7m archive file, l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a qu\u00e1 tr\u00ecnh \u0111\u00f3ng g\u00f3i nhi\u1ec1u file d\u1eef li\u1ec7u th\u00e0nh m\u1ed9t file th\u1ed1ng nh\u1ea5t (kh\u00f4ng c\u00f3 qu\u00e1 tr\u00ecnh n\u00e9n d\u1eef li\u1ec7u). M\u1ee5c \u0111\u00edch c\u1ee7a qu\u00e1 tr\u00ecnh \u0111\u00f3ng g\u00f3i n\u00e0y l\u00e0 d\u1ec5 d\u00e0ng cho qu\u00e1 tr\u00ecnh l\u01b0u tr\u1eef c\u0169ng nh\u01b0 trao \u0111\u1ed5i d\u1eef li\u1ec7u. Archive file c\u0169ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng l\u00e0m \u0111\u1ea7u v\u00e0o cho c\u00e1c tr\u00ecnh n\u00e9n d\u1eef li\u1ec7u. Archive file \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i b\u1eb1ng c\u00e1c file archiver. Trong Unix-like system, c\u00e1c file archiver ph\u1ed5 bi\u1ebfn nh\u01b0: tar, ar, cpio. Rootfs k\u1ebft qu\u1ea3 c\u1ee7a b\u01b0\u1edbc 1 \u0111ang \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i d\u01b0\u1edbi d\u1ea1ng archive file - cpio. Qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t rootfs l\u00ean ph\u00e2n v\u00f9ng rootfs tr\u00ean SD Card b\u1ea3n ch\u1ea5t l\u00e0 qu\u00e1 tr\u00ecnh th\u00e1o d\u1ee1 c\u00e1c archive file tr\u1edf v\u1ec1 c\u00e1c file ph\u00e2n bi\u1ec7t ban \u0111\u1ea7u. Qu\u00e1 tr\u00ecnh extract n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1edfi c\u00e1c Linux tool nh\u01b0: cpio ho\u1eb7c pax. Trong h\u01b0\u1edbng d\u1eabn c\u1ee7a Xilinx s\u1eed d\u1ee5ng pax \u0111\u1ec3 th\u00e1o d\u1ee1 rootfs.","title":"CPIO"},{"location":"projects/zedboard/zedboard/#file-system-format-fat32-va-ext4","text":"File system l\u00e0 c\u00e1ch m\u00e0 m\u1ed9t h\u1ec7 th\u1ed1ng file \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c tr\u00ean c\u00e1c b\u1ed9 nh\u1edb l\u01b0u tr\u1eef. C\u00e1c b\u1ed9 nh\u1edb l\u01b0u tr\u1eef c\u00f3 th\u1ec3 l\u00e0: disk file system ho\u1eb7c flash file system. Fat32 v\u00e0 ext4 l\u00e0 t\u00ean c\u1ee7a c\u00e1c d\u1ea1ng file system \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c ph\u1ed5 bi\u1ebfn tr\u00ean c\u00e1c d\u00f2ng disk file system nh\u01b0 SD Card trong b\u00e0i vi\u1ebft n\u00e0y l\u00e0 m\u1ed9t v\u00ed d\u1ee5. Ngo\u00e0i ra trong qu\u00e1 tr\u00ecnh l\u00e0m vi\u1ec7c v\u1edbi Rootfs c\u1ee7a zynq c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u1ebfn JFFS2 format l\u00e0 m\u1ed9t \u0111\u1ecbnh d\u1ea1ng file system s\u1eed d\u1ee5ng cho c\u00e1c b\u1ed9 nh\u1edb flash.","title":"File system format: fat32 v\u00e0 ext4."},{"location":"technote/makefile/makefile/","text":"Make system in Linux Original Note T\u00e0i li\u1ec7u n\u00e0y m\u00f4 t\u1ea3 chung v\u1ec1 Makefile, trong \u0111\u00f3 nh\u1eafc \u0111\u1ebfn c\u00e1c kh\u00e1i ni\u1ec7m quan tr\u1ecdng \u0111\u1ec3 c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c c\u00e1c Makefile ph\u1ee9c t\u1ea1p. make Kh\u00e1i ni\u1ec7m \"make\" l\u00e0 m\u1ed9t \"build tool\" \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 g\u1ecdi \u0111\u1ebfn c\u00e1c th\u00e0nh ph\u1ea7n trong m\u1ed9t toolchain (nh\u01b0 compiler, linker) \u0111\u1ec3 build ra executable programs t\u1eeb source code. \"make\" t\u1ef1 \u0111\u1ed9ng ph\u00e1t hi\u1ec7n \u0111\u01b0\u1ee3c ph\u1ea7n n\u00e0o c\u1ee7a source code \u0111\u01b0\u1ee3c s\u1eeda \u0111\u1ed5i \u0111\u1ec3 ti\u1ebfn h\u00e0nh build l\u1ea1i c\u1ee5c b\u1ed9 t\u1eebng b\u1ed9 ph\u1eadn \u0111\u00f3. Tr\u00e1nh \u0111\u01b0\u1ee3c tr\u01b0\u1eddng h\u1ee3p ph\u1ea3i build l\u1ea1i to\u00e0n b\u1ed9 h\u1ec7 th\u1ed1ng khi ch\u1ec9 m\u1ed9t ph\u1ea7n \u0111\u01b0\u1ee3c thay \u0111\u1ed5i. \"make\" c\u1ea7n m\u1ed9t file \u0111\u1eb7c bi\u1ec7t \u0111\u1ec3 m\u00f4 t\u1ea3 c\u00e1c b\u01b0\u1edbc \u0111\u1ec3 build ra image, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0: Makefile. Th\u00f4ng th\u01b0\u1eddng khi \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ebfn, \"make\" s\u1ebd t\u00ecm ki\u1ebfm trong th\u01b0 m\u1ee5c hi\u1ec7n t\u1ea1i c\u00e1c t\u00ean file nh\u01b0 sau: makefile, Makefile ho\u1eb7c GNUmakefile. Trong tr\u01b0\u1eddng h\u1ee3p makefile kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t theo chu\u1ea9n tr\u00ean, khai b\u00e1o makefile v\u1edbi \"make\" b\u1eb1ng ch\u1ec9 d\u1eabn \u2013f filename> ho\u1eb7c \u2013file= name>. Makefile Makefile l\u00e0 t\u1eadp h\u1ee3p c\u00e1c \u0111o\u1ea1n l\u1ec7nh m\u00f4 t\u1ea3 cho \"make\" bi\u1ebft ph\u1ea3i l\u00e0m g\u00ec \u0111\u1ec3 build ch\u01b0\u01a1ng tr\u00ecnh. C\u00e1c \u0111o\u1ea1n l\u1ec7nh m\u00f4 t\u1ea3 n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Rules. Rules M\u1ed9t Rules c\u00f3 d\u1ea1ng nh\u01b0 sau target \u2026 : prerequisites \u2026 recipe \u2026 \u2026 Target: th\u00f4ng th\u01b0\u1eddng l\u00e0 \u0111\u1ea7u ra (executable ho\u1eb7c object file) c\u1ee7a make. Ngo\u00e0i ra trong make \u0111\u1ecbnh ngh\u0129a th\u00eam m\u1ed9t lo\u1ea1i target \u0111\u1eb7c bi\u1ec7t: Phony Targets. M\u1ed9t target \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a out-of-date khi: Target \u0111\u00f3 kh\u00f4ng t\u1ed3n t\u1ea1i. C\u00e1c prerequisites b\u1ecb thay \u0111\u1ed5i. Implicit Rules \u0110\u1ec3 thu\u1eadn ti\u1ec7n cho ng\u01b0\u1eddi d\u00f9ng c\u0169ng nh\u01b0 l\u00e0m \u0111\u01a1n gi\u1ea3n Makefile, \"make\" \u0111\u1ecbnh ngh\u0129a c\u00e1c Implicit Rules . Trong m\u1ed9t s\u1ed1 Rules, n\u1ebfu recipe kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a, \"make\" s\u1ebd th\u1ef1c hi\u1ec7n build theo m\u1ed9t s\u1ed1 lu\u1eadt ng\u1ea7m \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc. V\u00ed d\u1ee5 nh\u01b0 khi rule c\u00f3 d\u1ea1ng main: main.c Ho\u1eb7c \u0111\u01a1n gi\u1ea3n h\u01a1n n\u1eefa main: Trong rule tr\u00ean kh\u00f4ng m\u00f4 t\u1ea3 recipe \u0111\u1ec3 \"make\" c\u00f3 th\u1ec3 ti\u1ebfn h\u00e0nh build, do \u0111\u00f3 \"make\" s\u1eed d\u1ee5ng implicit rule khi build v\u1edbi C source v\u00e0 s\u1ebd g\u1ecdi \u0111\u1ebfn: cc main.c \u2013o main Trong \u0111\u00f3 cc l\u00e0 system compiler. Variables Bi\u1ebfn (ho\u1eb7c c\u0169ng c\u00f3 th\u1ec3 g\u1ecdi l\u00e0 macro) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong Makefile \u0111\u1ec3 \u0111\u1ea1i di\u1ec7n cho m\u1ed9t chu\u1ed7i k\u00fd t\u1ef1. Trong Makefile c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c Automatic Variables . $@: l\u00e0 target c\u1ee7a rules $ : l\u00e0 t\u00ean c\u1ee7a prerequisites $^: t\u00ean c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c prerequisites \u0111\u01b0\u1ee3c c\u00e1c nhau b\u1eb1ng d\u1ea5u c\u00e1ch tr\u1eafng.","title":"Makefile"},{"location":"technote/makefile/makefile/#make-system-in-linux","text":"Original Note T\u00e0i li\u1ec7u n\u00e0y m\u00f4 t\u1ea3 chung v\u1ec1 Makefile, trong \u0111\u00f3 nh\u1eafc \u0111\u1ebfn c\u00e1c kh\u00e1i ni\u1ec7m quan tr\u1ecdng \u0111\u1ec3 c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c c\u00e1c Makefile ph\u1ee9c t\u1ea1p.","title":"Make system in Linux"},{"location":"technote/makefile/makefile/#make","text":"","title":"make"},{"location":"technote/makefile/makefile/#khai-niem","text":"\"make\" l\u00e0 m\u1ed9t \"build tool\" \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 g\u1ecdi \u0111\u1ebfn c\u00e1c th\u00e0nh ph\u1ea7n trong m\u1ed9t toolchain (nh\u01b0 compiler, linker) \u0111\u1ec3 build ra executable programs t\u1eeb source code. \"make\" t\u1ef1 \u0111\u1ed9ng ph\u00e1t hi\u1ec7n \u0111\u01b0\u1ee3c ph\u1ea7n n\u00e0o c\u1ee7a source code \u0111\u01b0\u1ee3c s\u1eeda \u0111\u1ed5i \u0111\u1ec3 ti\u1ebfn h\u00e0nh build l\u1ea1i c\u1ee5c b\u1ed9 t\u1eebng b\u1ed9 ph\u1eadn \u0111\u00f3. Tr\u00e1nh \u0111\u01b0\u1ee3c tr\u01b0\u1eddng h\u1ee3p ph\u1ea3i build l\u1ea1i to\u00e0n b\u1ed9 h\u1ec7 th\u1ed1ng khi ch\u1ec9 m\u1ed9t ph\u1ea7n \u0111\u01b0\u1ee3c thay \u0111\u1ed5i. \"make\" c\u1ea7n m\u1ed9t file \u0111\u1eb7c bi\u1ec7t \u0111\u1ec3 m\u00f4 t\u1ea3 c\u00e1c b\u01b0\u1edbc \u0111\u1ec3 build ra image, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0: Makefile. Th\u00f4ng th\u01b0\u1eddng khi \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ebfn, \"make\" s\u1ebd t\u00ecm ki\u1ebfm trong th\u01b0 m\u1ee5c hi\u1ec7n t\u1ea1i c\u00e1c t\u00ean file nh\u01b0 sau: makefile, Makefile ho\u1eb7c GNUmakefile. Trong tr\u01b0\u1eddng h\u1ee3p makefile kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1eb7t theo chu\u1ea9n tr\u00ean, khai b\u00e1o makefile v\u1edbi \"make\" b\u1eb1ng ch\u1ec9 d\u1eabn \u2013f filename> ho\u1eb7c \u2013file= name>.","title":"Kh\u00e1i ni\u1ec7m"},{"location":"technote/makefile/makefile/#makefile","text":"Makefile l\u00e0 t\u1eadp h\u1ee3p c\u00e1c \u0111o\u1ea1n l\u1ec7nh m\u00f4 t\u1ea3 cho \"make\" bi\u1ebft ph\u1ea3i l\u00e0m g\u00ec \u0111\u1ec3 build ch\u01b0\u01a1ng tr\u00ecnh. C\u00e1c \u0111o\u1ea1n l\u1ec7nh m\u00f4 t\u1ea3 n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Rules.","title":"Makefile"},{"location":"technote/makefile/makefile/#rules","text":"M\u1ed9t Rules c\u00f3 d\u1ea1ng nh\u01b0 sau target \u2026 : prerequisites \u2026 recipe \u2026 \u2026 Target: th\u00f4ng th\u01b0\u1eddng l\u00e0 \u0111\u1ea7u ra (executable ho\u1eb7c object file) c\u1ee7a make. Ngo\u00e0i ra trong make \u0111\u1ecbnh ngh\u0129a th\u00eam m\u1ed9t lo\u1ea1i target \u0111\u1eb7c bi\u1ec7t: Phony Targets. M\u1ed9t target \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a out-of-date khi: Target \u0111\u00f3 kh\u00f4ng t\u1ed3n t\u1ea1i. C\u00e1c prerequisites b\u1ecb thay \u0111\u1ed5i.","title":"Rules"},{"location":"technote/makefile/makefile/#implicit-rules","text":"\u0110\u1ec3 thu\u1eadn ti\u1ec7n cho ng\u01b0\u1eddi d\u00f9ng c\u0169ng nh\u01b0 l\u00e0m \u0111\u01a1n gi\u1ea3n Makefile, \"make\" \u0111\u1ecbnh ngh\u0129a c\u00e1c Implicit Rules . Trong m\u1ed9t s\u1ed1 Rules, n\u1ebfu recipe kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a, \"make\" s\u1ebd th\u1ef1c hi\u1ec7n build theo m\u1ed9t s\u1ed1 lu\u1eadt ng\u1ea7m \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc. V\u00ed d\u1ee5 nh\u01b0 khi rule c\u00f3 d\u1ea1ng main: main.c Ho\u1eb7c \u0111\u01a1n gi\u1ea3n h\u01a1n n\u1eefa main: Trong rule tr\u00ean kh\u00f4ng m\u00f4 t\u1ea3 recipe \u0111\u1ec3 \"make\" c\u00f3 th\u1ec3 ti\u1ebfn h\u00e0nh build, do \u0111\u00f3 \"make\" s\u1eed d\u1ee5ng implicit rule khi build v\u1edbi C source v\u00e0 s\u1ebd g\u1ecdi \u0111\u1ebfn: cc main.c \u2013o main Trong \u0111\u00f3 cc l\u00e0 system compiler.","title":"Implicit Rules"},{"location":"technote/makefile/makefile/#variables","text":"Bi\u1ebfn (ho\u1eb7c c\u0169ng c\u00f3 th\u1ec3 g\u1ecdi l\u00e0 macro) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong Makefile \u0111\u1ec3 \u0111\u1ea1i di\u1ec7n cho m\u1ed9t chu\u1ed7i k\u00fd t\u1ef1. Trong Makefile c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c Automatic Variables . $@: l\u00e0 target c\u1ee7a rules $ : l\u00e0 t\u00ean c\u1ee7a prerequisites $^: t\u00ean c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c prerequisites \u0111\u01b0\u1ee3c c\u00e1c nhau b\u1eb1ng d\u1ea5u c\u00e1ch tr\u1eafng.","title":"Variables"},{"location":"technote/markdown/markdown/","text":"Markdown Language Markdown is used for writing this website. So, the first thing I need to learn is about Markdown Language. About Markdown Figure 1. Markdown icon lightweight markup language was created by John Gruber in 2004 Basic Syntax This section notes about Markdown basic syntax. Insert a picture in Markdown: ![picture_name](direction_to_picture) Insert a hyperlink: [Name](Link) . Hyperlink is used in References in this note. Code and emphasize C syntax: int main() { printf( Hello world! ); return 0; } Quote (put ' ' before writing quote): This is example of block quote This is example of block quote Horizontal Rule: put a horizontal rule in doc by typing *** , see result below Task list (do not success by now) [x] Write the press release [ ] Update the website [ ] Contact the media Inserting a figure to docs: refer About Markdown in this page for example !!! note with \"admonition\" in mkdocs.yml add markdown_extensions: -admonition to mkdocs.yml file. Read more at Markdown Extentions Markdown Extentions Got information about markdown extentions at https://squidfunk.github.io/mkdocs-material/extensions/admonition/ PyMdown https://squidfunk.github.io/mkdocs-material/extensions/pymdown/ References The Markdown Guide - Matt Cone Markdown Guide - Website Basic writing and formatting syntax - GitHub Markdown Guide - Gitlab","title":"Markdown Language"},{"location":"technote/markdown/markdown/#markdown-language","text":"Markdown is used for writing this website. So, the first thing I need to learn is about Markdown Language.","title":"Markdown Language"},{"location":"technote/markdown/markdown/#about-markdown","text":"Figure 1. Markdown icon lightweight markup language was created by John Gruber in 2004","title":"About Markdown"},{"location":"technote/markdown/markdown/#basic-syntax","text":"This section notes about Markdown basic syntax. Insert a picture in Markdown: ![picture_name](direction_to_picture) Insert a hyperlink: [Name](Link) . Hyperlink is used in References in this note. Code and emphasize C syntax: int main() { printf( Hello world! ); return 0; } Quote (put ' ' before writing quote): This is example of block quote This is example of block quote Horizontal Rule: put a horizontal rule in doc by typing *** , see result below Task list (do not success by now) [x] Write the press release [ ] Update the website [ ] Contact the media Inserting a figure to docs: refer About Markdown in this page for example !!! note with \"admonition\" in mkdocs.yml add markdown_extensions: -admonition to mkdocs.yml file. Read more at Markdown Extentions","title":"Basic Syntax"},{"location":"technote/markdown/markdown/#markdown-extentions","text":"Got information about markdown extentions at https://squidfunk.github.io/mkdocs-material/extensions/admonition/","title":"Markdown Extentions"},{"location":"technote/markdown/markdown/#pymdown","text":"https://squidfunk.github.io/mkdocs-material/extensions/pymdown/","title":"PyMdown"},{"location":"technote/markdown/markdown/#references","text":"The Markdown Guide - Matt Cone Markdown Guide - Website Basic writing and formatting syntax - GitHub Markdown Guide - Gitlab","title":"References"},{"location":"technote/mkdocs/mkdocs-notes/","text":"MkDocs documentation This technote is built by Mkdocs . MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown , and configured with a single YAML configuration file (see Project Layout ). More detail about this tool at MKdocs . Others popular static site generator site platform: Pelican (suggested by Nguy\u1ec5n \u0110\u0103ng S\u01a1n - ESRC K53) Sphinx (I have tried to use, but faced errors - not fixed yet when publishing in Github Page) Getting started mkdocs new [project name] - Create a new project Deploy in Github Page This document will be published in Github Page . To do this, you need: Create a repository in github with name: vutang.github.io Clone this repo to local machine In local machine, use command: mkdocs gh-deploy --config-file [directory to mkdocs.yml config-file in docs] --remote-branch master Test with local webserver use mkdocs serve to run local web server in your browser, access http://127.0.0.1:8000 Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Support Themes The list of supported themes for Mkdocs https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes Readthedocs: readthedocs Material: material Readthedocs-DropDown: rtd-dropdown - trying but not really successful by now, need to figure out what happens Material Material is a theme for MkDocs , an excellent static site generator geared towards project documentation. It is built using Google's Material Design guidelines. To install Material theme for Mkdocs: sudo pip install mkdocs-material . Folow instruction in here . References Mkdocs Wiki","title":"Mkdocs Tool"},{"location":"technote/mkdocs/mkdocs-notes/#mkdocs-documentation","text":"This technote is built by Mkdocs . MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown , and configured with a single YAML configuration file (see Project Layout ). More detail about this tool at MKdocs . Others popular static site generator site platform: Pelican (suggested by Nguy\u1ec5n \u0110\u0103ng S\u01a1n - ESRC K53) Sphinx (I have tried to use, but faced errors - not fixed yet when publishing in Github Page)","title":"MkDocs documentation"},{"location":"technote/mkdocs/mkdocs-notes/#getting-started","text":"mkdocs new [project name] - Create a new project","title":"Getting started"},{"location":"technote/mkdocs/mkdocs-notes/#deploy-in-github-page","text":"This document will be published in Github Page . To do this, you need: Create a repository in github with name: vutang.github.io Clone this repo to local machine In local machine, use command: mkdocs gh-deploy --config-file [directory to mkdocs.yml config-file in docs] --remote-branch master","title":"Deploy in Github Page"},{"location":"technote/mkdocs/mkdocs-notes/#test-with-local-webserver","text":"use mkdocs serve to run local web server in your browser, access http://127.0.0.1:8000","title":"Test with local webserver"},{"location":"technote/mkdocs/mkdocs-notes/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"technote/mkdocs/mkdocs-notes/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"technote/mkdocs/mkdocs-notes/#support-themes","text":"The list of supported themes for Mkdocs https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes Readthedocs: readthedocs Material: material Readthedocs-DropDown: rtd-dropdown - trying but not really successful by now, need to figure out what happens","title":"Support Themes"},{"location":"technote/mkdocs/mkdocs-notes/#material","text":"Material is a theme for MkDocs , an excellent static site generator geared towards project documentation. It is built using Google's Material Design guidelines. To install Material theme for Mkdocs: sudo pip install mkdocs-material . Folow instruction in here .","title":"Material"},{"location":"technote/mkdocs/mkdocs-notes/#references","text":"Mkdocs Wiki","title":"References"},{"location":"technote/version_control/verctl/","text":"Version Control Information Version Control Client-Server Model In the client-server model, developers use a shared single repository. Subversion - SVN is a software versioning and revision control system distributed as open source under the Apache License. IBM Rational Team Concert Distributed Model In the distributed approach, each developer works directly with his or her own local repository, and changes are shared between repositories as a separate step. Git and Mercurcial (/m\u025c\u02d0r\u02c8kj\u028ari\u0259l/) are most popular version control tool. Web-based version control hosting services Github Gitlab Bitbucket Comparison from wiki: https://en.wikipedia.org/wiki/Comparison_of_source-code-hosting_facilities","title":"Version Control"},{"location":"technote/version_control/verctl/#version-control-information","text":"","title":"Version Control Information"},{"location":"technote/version_control/verctl/#version-control","text":"","title":"Version Control"},{"location":"technote/version_control/verctl/#client-server-model","text":"In the client-server model, developers use a shared single repository. Subversion - SVN is a software versioning and revision control system distributed as open source under the Apache License. IBM Rational Team Concert","title":"Client-Server Model"},{"location":"technote/version_control/verctl/#distributed-model","text":"In the distributed approach, each developer works directly with his or her own local repository, and changes are shared between repositories as a separate step. Git and Mercurcial (/m\u025c\u02d0r\u02c8kj\u028ari\u0259l/) are most popular version control tool.","title":"Distributed Model"},{"location":"technote/version_control/verctl/#web-based-version-control-hosting-services","text":"Github Gitlab Bitbucket Comparison from wiki: https://en.wikipedia.org/wiki/Comparison_of_source-code-hosting_facilities","title":"Web-based version control hosting services"}]}